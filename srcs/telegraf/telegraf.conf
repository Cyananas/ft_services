[global_tags]

[agent]
  interval = "10s"
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "0s"
  flush_interval = "10s"
  flush_jitter = "0s"
  precision = ""
  hostname = "metrics"
  omit_hostname = false

# configuration de l'envoi des donnees a INFLUXDB #####################
[[outputs.influxdb]]
  ## The full HTTP or UDP URL for your InfluxDB instance.
  ##
  ## Multiple URLs can be specified for a single cluster, only ONE of the
  ## urls will be written to each interval.
  # urls = ["unix:///var/run/influxdb.sock"]
  # urls = ["udp://127.0.0.1:8086"]
  urls = ["http://influxdb:8086"]

  ## HTTP User-Agent
  #user_agent = ""

  ## The target database for metrics; will be created as needed.
  ## For UDP url endpoint database needs to be configured on server side.
  database = "telegraf"

  username = "pravry"
  password = "pravry"

# stats CPU ######################################################
[[inputs.cpu]]
# send the stats for each core and not global
  percpu = true
# send the total number of cores
  totalcpu = true
# do not send metrics in raw format
  collect_cpu_time = false
# send the CPU stats anyway even if it is inactive
  report_active = false

# stats disks ####################################################
[[inputs.disk]]
  ignore_fs = ["tmpfs", "devtmpfs", "devfs"]

# number of bytes written and read on the disk ###################
[[inputs.diskio]]

[[inputs.kernel]]

# memory usage ###################################################
[[inputs.mem]]

# process running on the machine #################################
[[inputs.processes]]

[[inputs.swap]]

[[inputs.system]]

# send telegraf metrics to file(s) = files to write to
[[outputs.file]]
    files = ["stdout"] 
    data_format = "influx"

# url for the kubelet
[[inputs.kubernetes]]
    url = "https://172.17.0.3:10250"
    # disable validation of the server certificate - ssl config because we are using a self-signed certificate
    insecure_skip_verify = true
